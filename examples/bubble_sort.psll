(set newline (chr 10))

// Allocate an array
(set a [3 1 4 1 5 9 2 6 5 3 5])
(set N 11) // Array length

// Bubble sort the array
(do again (
    (set again 0)
    (set n 0) // Position pointer
    (loop (! (! (<=> n (- N 1)))) ( // Go through all the pairs
        (set this (arg a n))
        (set next (arg a (+ n 1)))

        // This and next need swapping
        (set swap (! (<=> (<=> this next) -1)))
        (? swap (
            (set again 1) // Will need to go through the list again
            (set b []) // Start b as an empty array
            
            // Add prefix of a
            (set l 0)
            (loop (= (<=> l n) -1) (
                (set b (+ b (- ((arg a l) nil) (nil nil))))
            (set l (+ l 1))
            ))

            // Add two elements, swapped
            (set b (+ b (- ((arg a (+ n 1)) nil) (nil nil))))
            (set b (+ b (- ((arg a (+ n 0)) nil) (nil nil))))

            // Add suffix of a
            (set l (+ n 2))
            (loop (= (<=> l N) -1) (
                (set b (+ b (- ((arg a l) nil) (nil nil))))
            (set l (+ l 1))
            ))
            (set a b)
        ))
    (set n (+ n 1)) // Increment position pointer
    ))
    (out b (chr 10)) // Print b + newline
))